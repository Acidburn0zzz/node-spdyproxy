#!/usr/bin/env node

var path = require('path')
  , pkg = require('../package.json')
  , version = pkg.version
  , colors = require('colors')
  , spdyProxy = require('../lib/server')
  , fs = require('fs')
  , opts = require('optimist')
    .usage('Usage: $0')
    .options({
      key: {
        demand: true,
        alias: 'k',
        description: 'path to SSL key'
      },
      cert: {
        demand: true,
        alias: 'c',
        description: 'path to SSL certificate'
      },
      ca: {
        demand: false,
        alias: 'a',
        description: 'path to SSL CA certificate'
      },
      port: {
        demand: false,
        alias: 'p',
        description: 'proxy port',
        default: 44300
      },
      user: {
        demand: false,
        alias: 'U',
        description: 'basic auth username'
      },
      pass: {
        demand: false,
        alias: 'P',
        description: 'basic auth password'
      },
      radius_host: {
        demand: false,
        alias: 'R',
        description: 'RADIUS Host'
      },
      radius_port: {
        demand: false,
        default: 1812,
        alias: 'P',
        description: 'RADIUS Port'
      },
      radius_secret: {
        demand: false,
        alias: 'S',
        description: 'RADIUS Shared Secret'
      },
      verbose: {
        demand: false,
        alias: 'v',
        description: 'enable verbose logging',
        default: false
      }
    }).argv;

opts.version = version;
opts.key = fs.readFileSync(path.resolve(opts.key));
opts.cert = fs.readFileSync(path.resolve(opts.cert));
if (opts.ca) opts.ca = fs.readFileSync(path.resolve(opts.ca));

// process.on('uncaughtException', function(e) {
//   console.error('Error: '.red + e);
// });

var proxy = new spdyProxy.createServer(opts);

if(opts.radius_host) {
  if(!opts.radius_secret) {
    throw new Error('"radius_secret" must be specified.');
    process.exit();
  }
  proxy.auth(require('../lib/radius')(opts.radius_host, opts.radius_port, opts.radius_secret))
}

proxy.listen(opts.port);

console.log(
  "Started SPDY proxy, port: ".green + opts.port
  + (" (v. %s)").grey, version
);
